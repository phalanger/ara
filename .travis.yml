sudo: required
dist: precise
language: cpp

matrix:
  include:

    # 1/ Linux Clang Builds
    - os: linux
      compiler: clang
      addons: &clang38
        apt:
          sources: ['llvm-toolchain-precise-3.8', 'ubuntu-toolchain-r-test']
          packages: ['clang-3.8']
      env: COMPILER='ccache clang++-3.8' BUILD_TYPE='Release'

    - os: linux
      compiler: clang
      addons: *clang38
      env: COMPILER='ccache clang++-3.8' BUILD_TYPE='Debug'


    # 2/ Linux GCC Builds
    - os: linux
      compiler: gcc
      addons: &gcc48
        apt:
         sources: ['ubuntu-toolchain-r-test']
         packages: ['g++-4.8']
      env: COMPILER='ccache g++-4.8' BUILD_TYPE='Release'

    - os: linux
      compiler: gcc
      addons: *gcc48
      env: COMPILER='ccache g++-4.8' BUILD_TYPE='Debug'


    - os: linux
      compiler: gcc
      addons: &gcc49
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.9']
      env: COMPILER='ccache g++-4.9' BUILD_TYPE='Release'

    - os: linux
      compiler: gcc
      addons: *gcc49
      env: COMPILER='ccache g++-4.9' BUILD_TYPE='Debug'


    - os: linux
      compiler: gcc
      addons: &gcc5
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5']
      env: COMPILER='ccache g++-5' BUILD_TYPE='Release'

    - os: linux
      compiler: gcc
      addons: *gcc5
      env: COMPILER='ccache g++-5' BUILD_TYPE='Debug'


    # 3/ OSX Clang Builds
    - os: osx
      osx_image: xcode8
      compiler: clang
      env: COMPILER='ccache clang++' BUILD_TYPE='Debug'

    - os: osx
      osx_image: xcode8
      compiler: clang
      env: COMPILER='ccache clang++' BUILD_TYPE='Release'


install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      which cmake || brew install cmake 
      which ccache || brew install ccache
      brew upgrade openssl
      OPENSSL_FLAGS=¡®-DCMAKE_CXX_FLAGS="-I/usr/local/opt/openssl/include" -DCMAKE_MODULE_LINKER_FLAGS="-L/usr/local/opt/openssl/lib"¡¯
    fi

before_script:
  - export CXX=${COMPILER}
  - cd ${TRAVIS_BUILD_DIR}
  - cmake -H. -Bbin -DCMAKE_BUILD_TYPE=${BUILD_TYPE}  ${OPENSSL_FLAGS}
  - cd bin

script:
  - make -j 2
  - ctest -V -j 2

